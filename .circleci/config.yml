version: 2.1

orbs:
  node: circleci/node@5

jobs:
  test-frontend:
    executor: node/default
    working_directory: ~/project
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
          app-dir: frontend
      - run:
          name: Run frontend tests
          command: |
            cd frontend
            npm test -- --watchAll=false

  test-backend:
    executor: node/default
    working_directory: ~/project
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
          app-dir: backend
      - run:
          name: Run backend tests
          command: |
            cd backend
            npm test

  build-push:
    docker:
      - image: cimg/base:2024.01
    steps:
      - setup_remote_docker
      - checkout
      - run:
          name: Docker Hub login
          command: echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USER" --password-stdin
      - run:
          name: Build & push (branch-tagged)
          command: |
            SHORT=$(git rev-parse --short "$CIRCLE_SHA1")
            TAG="${CIRCLE_BRANCH}-${SHORT}"
            docker compose build
            docker tag crashalert-backend       "$DOCKERHUB_USER/crashalert-backend:$TAG"
            docker tag crashalert-frontend      "$DOCKERHUB_USER/crashalert-frontend:$TAG"
            docker tag crashalert-model-service "$DOCKERHUB_USER/crashalert-model-service:$TAG"
            docker push "$DOCKERHUB_USER/crashalert-backend:$TAG"
            docker push "$DOCKERHUB_USER/crashalert-frontend:$TAG"
            docker push "$DOCKERHUB_USER/crashalert-model-service:$TAG"

  deploy:
    docker:
      - image: cimg/base:2024.01
    steps:
      - add_ssh_keys:
          fingerprints: [ "YOUR_SSH_FINGERPRINT" ]
      - run:
          name: Deploy to server (zero-downtime)
          command: |
            ssh -o StrictHostKeyChecking=no user@138.199.216.9 '
              cd ~/CrashAlertAI &&
              git pull origin main &&
              docker compose pull &&
              docker compose up -d --remove-orphans --pull always
            '

workflows:
  test-build-deploy:
    jobs:
      - test-frontend
      - test-backend
      - build-push:
          requires: [ test-frontend, test-backend ]
      - deploy:
          requires: [ build-push ]
          filters:
            branches: { only: main }
